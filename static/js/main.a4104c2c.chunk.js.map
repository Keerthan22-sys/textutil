{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","headings","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","protoTypes","PropTypes","string","isRequired","About","defaultProps","App","setMode","_useState3","_useState4","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a4104c2c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n  return (\n    <>\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/*<li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">{props.About}</a>\n  </li>*/}\n      </ul>\n    {/*<form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n  </form>*/}\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode switch</label>\n</div>\n    </div>\n  </div>\n</nav>\n    </>\n  )\n}\n\nNavbar.protoTypes = {\n    title: PropTypes.string.isRequired,\n    About: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set Title here',\n    About: 'About'\n}\n\n\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = ()=>{\r\n        console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\", \"success\");\r\n    }\r\n\r\n  const handleLoclick = ()=>{\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lower case\", \"success\");\r\n  }\r\n  const handleClearclick = ()=>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared\", \"success\");\r\n  }\r\n\r\n    const handleOnchange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n      let text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Removed extraspace\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.headings}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className='form-control' value={text} onChange={handleOnchange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n\r\n            </div>\r\n            <button className='btn btn-primary mx-1' onClick={handleUpclick}>Convert to upper case</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleLoclick}>Convert to lower case</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleClearclick}>Clear Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleCopy}>Copy Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n    </div>\r\n    <div className='container my-3' style={{color: props.mode==='dark'?'white':'black'}} >\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters </p>\r\n      <p> {0.008 * text.split(\" \").length} minutes read </p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in textbox to preview here\"}</p>\r\n    </div>\r\n    </>\r\n    \r\n\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n</div>\n  )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message,type)=>{\n      setalert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() =>\n      {\n        setalert(null);\n      }, 1500);\n  }\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Dark mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install textutils now\";\n      // }, 1500);\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Light mode\";\n    }\n    \n  }\n  return (\n    <>\n    {/*<Router>*/}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n      {/*<switch>\n        <Route exact path='/about'>\n          <About/>\n        </Route>\n  <Route exact path='/'>*/}\n          <TextForm showAlert={showAlert} headings=\"Enter the text to analyze\" mode={mode}/>\n        {/*</Route>\n      </switch>*/}\n    </div>\n    {/*</Router>*/}\n    </>\n  \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}